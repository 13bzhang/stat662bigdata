cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
dim(c.1.97)
c.98 <- sample(x=seq(-1:1),size=nr,replace=T)
c.98
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T)
c.98
c.100 <- sample(x=c(letters,seq(-10:10)),size=nr,replace=T)
c.100
pool=c(letters,seq(-9:9))
pool
pool=c(letters,seq(from=-9, to=9))
pool
sample(x=pool, sample(min,max,1))
sample(x=pool, size=sample(min,max,1))
sample(min,max,1
)
min=1
max=8
sample(x=pool, size=sample(min,max,1))
sample(x=pool, size=sample(min,max,1))
size=sample(min,max,1)
size
sample(x=pool, size=sample(min:max,1))
paste(sample(x=pool, size=sample(min:max,1)),sep="")
paste(sample(x=pool, size=sample(min:max,1)),sep="")
paste(sample(x=pool, size=sample(min:max,1)),collapse="")
paste(sample(x=pool, size=sample(min:max,1)),collapse="")
paste(sample(x=pool, size=sample(min:max,1)),collapse="")
paste(sample(x=pool, size=sample(min:max,1)),collapse="")
paste(sample(x=pool, size=sample(min:max,1)),collapse="")
mstring <- function(n,min=1,max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(min:max,1)),collapse="")
}
c.100 <- mstring(nr)
dim(c.100)
c.100
mstring <- function(min=1,max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(min:max,1)),collapse="")
}
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring)
c.100
return(c.1.97,c.98,c.99,c.100)
return(cbind(c.1.97,c.98,c.99,c.100))
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
return(cbind(c.1.97,c.98,c.99,c.100))
cbind(c.1.97,c.98,c.99,c.100)
list(c.1.97,c.98,c.99,c.100)
as.data.frame(c.1.97,c.98,c.99,c.100)
as.data.frame(list(c.1.97,c.98,c.99,c.100))
result <- as.data.frame(list(c.1.97,c.98,c.99,c.100))
result
head(result)
list(c.1.97,c.98,c.99,c.100)
file.create("myfile.csv")
write.table(list(c.1.97,c.98,c.99,c.100),
file = "myfile.csv", sep = ",",
col.names = FALSE, append=TRUE)
setwd("~/Dropbox/stat662/stat662bigdata")
file.create("myfile.csv")
write.table(list(c.1.97,c.98,c.99,c.100),
file = "myfile.csv", sep = ",",
col.names = FALSE, append=TRUE)
write.table(list(c.1.97,c.98,c.99,c.100),
file = "myfile.csv", sep = ",",
col.names = FALSE, append=TRUE)
gensize <- function(size,filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
file.create(filename)
write.table(list(c.1.97,c.98,c.99,c.100),
file = filename, sep = ",",
col.names = FALSE, append=TRUE)
}
gensize(100,"mytest.csv")
ensize <- function(size,filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
write.table(list(c.1.97,c.98,c.99,c.100),
file = filename, sep = ",",
col.names = FALSE, append=TRUE)
return(nr)
}
c(1,2)
rep(c(1,2),3)
t(replicate(2, v))
t(replicate(2, c(1,2)))
genbig <- function(times,size,filename){
file.create(filename)
apply(t(replicate(times, c(size,filename))), gensize)
}
genbig(2,100,"mytest.csv")
###########################################
# STAT 662 Generate Big Data
gensize <- function(size,filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
write.table(list(c.1.97,c.98,c.99,c.100),
file = filename, sep = ",",
col.names = FALSE, append=TRUE)
return(nr)
}
genbig <- function(times,size,filename){
file.create(filename)
sapply(t(replicate(times, c(size,filename))), gensize)
}
genbig(2,100,"mytest.csv")
genbig <- function(times,size,filename){
gensize <- function(size,filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
write.table(list(c.1.97,c.98,c.99,c.100),
file = filename, sep = ",",
col.names = FALSE, append=TRUE)
return(nr)
}
file.create(filename)
sapply(t(replicate(times, c(size,filename))), gensize)
}
genbig(2,100,"mytest.csv")
genbig <- function(times,size,filename){
file.create(filename)
gensize <- function(size,filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
write.table(list(c.1.97,c.98,c.99,c.100),
file = filename, sep = ",",
col.names = FALSE, append=TRUE)
return(nr)
}
sapply(t(replicate(times, c(size,filename))), gensize)
}
genbig(2,100,"mytest.csv")
###########################################
# STAT 662 Generate Big Data
genbig <- function(times,size,filename){
file.create(filename)
gensize <- function(size,filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
write.table(list(c.1.97,c.98,c.99,c.100),
file = filename, sep = ",",
col.names = FALSE, append=TRUE)
return(nr)
}
sapply(t(replicate(times, c(size,filename))), gensize)
}
genbig(2,100,"mytest.csv")
genbig(times=2,size=100,filename="mytest.csv")
###########################################
# STAT 662 Generate Big Data
genbig <- function(times,size,filename){
file.create(filename)
gensize <- function(size,filename=filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
write.table(list(c.1.97,c.98,c.99,c.100),
file = filename, sep = ",",
col.names = FALSE, append=TRUE)
return(nr)
}
sapply(t(replicate(times, c(size,filename))), gensize)
}
genbig(times=2,size=100,filename="mytest.csv")
###########################################
# STAT 662 Generate Big Data
genbig <- function(times,size,filename){
file.create(filename)
gensize <- function(size,filename=filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
write.table(list(c.1.97,c.98,c.99,c.100),
file = "mytest.csv", sep = ",",
col.names = FALSE, append=TRUE)
return(nr)
}
sapply(t(replicate(times, c(size,filename))), gensize)
}
genbig(times=2,size=100,filename="mytest.csv")
gensize <- function(size,filename=filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
write.table(list(c.1.97,c.98,c.99,c.100),
file = "mytest.csv", sep = ",",
col.names = FALSE, append=TRUE)
return(nr)
}
file.create("mytest.csv")
sapply(t(replicate(2, c(10,"mytest.csv"))), gensize)
sapply(t(replicate(2, c(100,"mytest.csv"))), gensize)
gensize(100,"test2.csv")
gensize <- function(size,filename=filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
write.table(list(c.1.97,c.98,c.99,c.100),
file = "mytest.csv", sep = ",",
col.names = FALSE, append=TRUE)
return(nr)
}
gensize <- function(size,filename=filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
write.table(list(c.1.97,c.98,c.99,c.100),
file = "mytest.csv", sep = ",",
col.names = FALSE, append=TRUE)
}
gensize(100,"mycsv.csv")
gensize <- function(size,filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
write.table(list(c.1.97,c.98,c.99,c.100),
file = filename, sep = ",",
col.names = FALSE, append=TRUE)
}
gensize(100,"mycsv.csv")
file.create("my100.csv")
gensize(100,"my100.csv")
file.create("my200.csv")
sapply(t(replicate(2, c(100,"my200.csv"))), gensize)
sapply(t(replicate(1, c(100,"my200.csv"))), gensize)
apply(t(replicate(1, c(100,"my200.csv"))), 1,gensize)
t(replicate(1, c(100,"my200.csv")))
replicate(1, c(100,"my200.csv"))
t(replicate(1, list(100,"my200.csv")))
t(replicate(2, list(100,"my200.csv")))
mapply(t(replicate(2, list(100,"my200.csv"))), 1, gensize)
t(replicate(2, list(100,"my200.csv")))
apply(t(replicate(2, list(100,"my200.csv"))), 1, gensize)
t(replicate(2, list(100,"my200.csv")))
setup <- t(replicate(2, list(100,"my200.csv")))
class(setup)
apply(setup, 1, gensize)
setup <- list(t(replicate(2, list(100,"my200.csv"))))
class(setup)
apply(setup, 1, gensize)
dim(list)
setup
apply(setup[[1]], 1, gensize)
setup <- list(replicate(2, list(100,"my200.csv")))
setup
setup <- list(replicate(2, list(100,"my200.csv")))[[1]]
class(setup)
setup <- list(replicate(2, list(100,"my200.csv")))
class(setup)
mapply(list, FUN=gensize(100,"my200.csv"),times=2)
replicate(2,gensize(100,"my200.csv"))
gensize <- function(size,filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
write.table(list(c.1.97,c.98,c.99,c.100),
file = filename, sep = ",",
col.names = FALSE, row.names=FALSE,append=TRUE)
}
replicate(2,gensize(100,"my200.csv"))
genbig <- function(times,size,filename){
file.create(filename)
gensize <- function(size,filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
write.table(list(c.1.97,c.98,c.99,c.100),
file = filename, sep = ",",
col.names = FALSE, row.names=FALSE,append=TRUE)
}
replicate(times,gensize(size,filename))
}
genbig(times=2,size=100,filename="mytest.csv")
genbig(times=20000,size=100,filename="mytest.csv")
###########################################
# STAT 662 Generate Big Data
genbig <- function(times,size,filename){
file.create(filename)
gensize <- function(size,filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
write.table(list(c.1.97,c.98,c.99,c.100),
file = filename, sep = ",",
col.names = FALSE, row.names=FALSE,append=TRUE)
}
replicate(times,gensize(size,filename))
}
genbig(times=20000,size=100,filename="mytest.csv")
install.packages("rbenchmark")
library(rbenchmark)
200*1000
benchmark(genbig(times=2000,size=1000,filename="mytest.csv"))
benchmark(genbig(times=20,size=1000,filename="mytest.csv"))
benchmark(genbig(times=2,size=1000,filename="mytest.csv"))
benchmark(genbig(times=2000,size=1000,filename="mytest.csv"),replications=1)
benchmark(genbig(times=2,size=1000,filename="mytest.csv"),replications=1)
benchmark(genbig(times=100,size=1000,filename="mytest.csv"),replications=1)
benchmark(genbig(times=50,size=1000,filename="mytest.csv"),replications=1)
benchmark(genbig(times=50,size=1000,filename="mytest.csv"),replications=10)
134.902/10
setwd("~/Dropbox/stat662/stat662bigdata/R")
install.packages("rbenchmark")
install.packages("rbenchmark")
library(rbenchmark)
genbig <- function(times,size,filename){
file.create(filename)
gensize <- function(size,filename){
nr <- size # number of rows
# function to sample and create the numerical columns (1-97)
cnum <- function(nr) {
sample(x=c(0.1, 0.2, 0.3),size=nr,replace=T)
}
c.1.97 <- sapply(rep(nr,97),cnum) # create columns 1-97
c.98 <- sample(x=c(-1,0,1),size=nr,replace=T) # create column 98
c.99 <- sample(x=letters, size=nr, replace=T) # create column 99
# function to generate random string
mstring <- function(max=8){
pool=c(letters,seq(from=-9, to=9))
paste(sample(x=pool, size=sample(1:max,1)),collapse="")
}
c.100 <- sapply(rep(8,nr),mstring) # create column 100
write.table(list(c.1.97,c.98,c.99,c.100),
file = filename, sep = ",",
col.names = FALSE, row.names=FALSE,append=TRUE)
}
replicate(times,gensize(size,filename))
}
# benchmark
benchmark(genbig(times=50,size=1000,filename="mytest.csv"),replications=10)
# Baobao's Computer: Macbook Pro 9.2 (4 GB of RAM), Ubuntu Linux OS
126.128/10
